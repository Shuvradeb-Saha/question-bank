package spl.question.bank.database.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ModeratorQuestionExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public ModeratorQuestionExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andQuestionIdIsNull() {
            addCriterion("question_id is null");
            return (Criteria) this;
        }

        public Criteria andQuestionIdIsNotNull() {
            addCriterion("question_id is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionIdEqualTo(Integer value) {
            addCriterion("question_id =", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdNotEqualTo(Integer value) {
            addCriterion("question_id <>", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdGreaterThan(Integer value) {
            addCriterion("question_id >", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("question_id >=", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdLessThan(Integer value) {
            addCriterion("question_id <", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdLessThanOrEqualTo(Integer value) {
            addCriterion("question_id <=", value, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdIn(List<Integer> values) {
            addCriterion("question_id in", values, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdNotIn(List<Integer> values) {
            addCriterion("question_id not in", values, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdBetween(Integer value1, Integer value2) {
            addCriterion("question_id between", value1, value2, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionIdNotBetween(Integer value1, Integer value2) {
            addCriterion("question_id not between", value1, value2, "questionId");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeIsNull() {
            addCriterion("question_type is null");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeIsNotNull() {
            addCriterion("question_type is not null");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeEqualTo(String value) {
            addCriterion("question_type =", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotEqualTo(String value) {
            addCriterion("question_type <>", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeGreaterThan(String value) {
            addCriterion("question_type >", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeGreaterThanOrEqualTo(String value) {
            addCriterion("question_type >=", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeLessThan(String value) {
            addCriterion("question_type <", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeLessThanOrEqualTo(String value) {
            addCriterion("question_type <=", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeLike(String value) {
            addCriterion("question_type like", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotLike(String value) {
            addCriterion("question_type not like", value, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeIn(List<String> values) {
            addCriterion("question_type in", values, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotIn(List<String> values) {
            addCriterion("question_type not in", values, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeBetween(String value1, String value2) {
            addCriterion("question_type between", value1, value2, "questionType");
            return (Criteria) this;
        }

        public Criteria andQuestionTypeNotBetween(String value1, String value2) {
            addCriterion("question_type not between", value1, value2, "questionType");
            return (Criteria) this;
        }

        public Criteria andModeratorIdIsNull() {
            addCriterion("moderator_id is null");
            return (Criteria) this;
        }

        public Criteria andModeratorIdIsNotNull() {
            addCriterion("moderator_id is not null");
            return (Criteria) this;
        }

        public Criteria andModeratorIdEqualTo(Integer value) {
            addCriterion("moderator_id =", value, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andModeratorIdNotEqualTo(Integer value) {
            addCriterion("moderator_id <>", value, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andModeratorIdGreaterThan(Integer value) {
            addCriterion("moderator_id >", value, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andModeratorIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("moderator_id >=", value, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andModeratorIdLessThan(Integer value) {
            addCriterion("moderator_id <", value, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andModeratorIdLessThanOrEqualTo(Integer value) {
            addCriterion("moderator_id <=", value, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andModeratorIdIn(List<Integer> values) {
            addCriterion("moderator_id in", values, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andModeratorIdNotIn(List<Integer> values) {
            addCriterion("moderator_id not in", values, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andModeratorIdBetween(Integer value1, Integer value2) {
            addCriterion("moderator_id between", value1, value2, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andModeratorIdNotBetween(Integer value1, Integer value2) {
            addCriterion("moderator_id not between", value1, value2, "moderatorId");
            return (Criteria) this;
        }

        public Criteria andAssignedDateIsNull() {
            addCriterion("assigned_date is null");
            return (Criteria) this;
        }

        public Criteria andAssignedDateIsNotNull() {
            addCriterion("assigned_date is not null");
            return (Criteria) this;
        }

        public Criteria andAssignedDateEqualTo(Date value) {
            addCriterion("assigned_date =", value, "assignedDate");
            return (Criteria) this;
        }

        public Criteria andAssignedDateNotEqualTo(Date value) {
            addCriterion("assigned_date <>", value, "assignedDate");
            return (Criteria) this;
        }

        public Criteria andAssignedDateGreaterThan(Date value) {
            addCriterion("assigned_date >", value, "assignedDate");
            return (Criteria) this;
        }

        public Criteria andAssignedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("assigned_date >=", value, "assignedDate");
            return (Criteria) this;
        }

        public Criteria andAssignedDateLessThan(Date value) {
            addCriterion("assigned_date <", value, "assignedDate");
            return (Criteria) this;
        }

        public Criteria andAssignedDateLessThanOrEqualTo(Date value) {
            addCriterion("assigned_date <=", value, "assignedDate");
            return (Criteria) this;
        }

        public Criteria andAssignedDateIn(List<Date> values) {
            addCriterion("assigned_date in", values, "assignedDate");
            return (Criteria) this;
        }

        public Criteria andAssignedDateNotIn(List<Date> values) {
            addCriterion("assigned_date not in", values, "assignedDate");
            return (Criteria) this;
        }

        public Criteria andAssignedDateBetween(Date value1, Date value2) {
            addCriterion("assigned_date between", value1, value2, "assignedDate");
            return (Criteria) this;
        }

        public Criteria andAssignedDateNotBetween(Date value1, Date value2) {
            addCriterion("assigned_date not between", value1, value2, "assignedDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table moderator_question
     *
     * @mbg.generated do_not_delete_during_merge Fri Nov 29 22:44:46 BDT 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table moderator_question
     *
     * @mbg.generated Fri Nov 29 22:44:46 BDT 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}