package spl.question.bank.database.client;

import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import spl.question.bank.database.MapperMarker;
import spl.question.bank.database.handler.JsonTypeHandler;
import spl.question.bank.database.model.MCQQuestion;
import spl.question.bank.database.model.MCQQuestionExample;

public interface MCQQuestionMapper extends MapperMarker {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @SelectProvider(type=MCQQuestionSqlProvider.class, method="countByExample")
    long countByExample(MCQQuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @DeleteProvider(type=MCQQuestionSqlProvider.class, method="deleteByExample")
    int deleteByExample(MCQQuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @Delete({
        "delete from mcq_question",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @Insert({
        "insert into mcq_question (type, base_question, ",
        "weight, created_by, ",
        "subject_id, chapter_id, ",
        "created_at, moderated_at, ",
        "moderated_by, status, ",
        "difficulty)",
        "values (#{type,jdbcType=VARCHAR}, #{baseQuestion,jdbcType=OTHER,typeHandler=spl.question.bank.database.handler.JsonTypeHandler}, ",
        "#{weight,jdbcType=INTEGER}, #{createdBy,jdbcType=INTEGER}, ",
        "#{subjectId,jdbcType=INTEGER}, #{chapterId,jdbcType=INTEGER}, ",
        "#{createdAt,jdbcType=TIMESTAMP}, #{moderatedAt,jdbcType=TIMESTAMP}, ",
        "#{moderatedBy,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, ",
        "#{difficulty,jdbcType=VARCHAR})"
    })
    @SelectKey(statement="select currval('mcq_question_id_seq')", keyProperty="id", before=false, resultType=Integer.class)
    int insert(MCQQuestion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @InsertProvider(type=MCQQuestionSqlProvider.class, method="insertSelective")
    @SelectKey(statement="select currval('mcq_question_id_seq')", keyProperty="id", before=false, resultType=Integer.class)
    int insertSelective(MCQQuestion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @SelectProvider(type=MCQQuestionSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="base_question", property="baseQuestion", typeHandler=JsonTypeHandler.class, jdbcType=JdbcType.OTHER),
        @Result(column="weight", property="weight", jdbcType=JdbcType.INTEGER),
        @Result(column="created_by", property="createdBy", jdbcType=JdbcType.INTEGER),
        @Result(column="subject_id", property="subjectId", jdbcType=JdbcType.INTEGER),
        @Result(column="chapter_id", property="chapterId", jdbcType=JdbcType.INTEGER),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="moderated_at", property="moderatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="moderated_by", property="moderatedBy", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="difficulty", property="difficulty", jdbcType=JdbcType.VARCHAR)
    })
    List<MCQQuestion> selectByExample(MCQQuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @Select({
        "select",
        "id, type, base_question, weight, created_by, subject_id, chapter_id, created_at, ",
        "moderated_at, moderated_by, status, difficulty",
        "from mcq_question",
        "where id = #{id,jdbcType=INTEGER}"
    })
    @Results({
        @Result(column="id", property="id", jdbcType=JdbcType.INTEGER, id=true),
        @Result(column="type", property="type", jdbcType=JdbcType.VARCHAR),
        @Result(column="base_question", property="baseQuestion", typeHandler=JsonTypeHandler.class, jdbcType=JdbcType.OTHER),
        @Result(column="weight", property="weight", jdbcType=JdbcType.INTEGER),
        @Result(column="created_by", property="createdBy", jdbcType=JdbcType.INTEGER),
        @Result(column="subject_id", property="subjectId", jdbcType=JdbcType.INTEGER),
        @Result(column="chapter_id", property="chapterId", jdbcType=JdbcType.INTEGER),
        @Result(column="created_at", property="createdAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="moderated_at", property="moderatedAt", jdbcType=JdbcType.TIMESTAMP),
        @Result(column="moderated_by", property="moderatedBy", jdbcType=JdbcType.INTEGER),
        @Result(column="status", property="status", jdbcType=JdbcType.VARCHAR),
        @Result(column="difficulty", property="difficulty", jdbcType=JdbcType.VARCHAR)
    })
    MCQQuestion selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @UpdateProvider(type=MCQQuestionSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") MCQQuestion record, @Param("example") MCQQuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @UpdateProvider(type=MCQQuestionSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") MCQQuestion record, @Param("example") MCQQuestionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @UpdateProvider(type=MCQQuestionSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(MCQQuestion record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table mcq_question
     *
     * @mbg.generated Sun Dec 01 11:22:53 BDT 2019
     */
    @Update({
        "update mcq_question",
        "set type = #{type,jdbcType=VARCHAR},",
          "base_question = #{baseQuestion,jdbcType=OTHER,typeHandler=spl.question.bank.database.handler.JsonTypeHandler},",
          "weight = #{weight,jdbcType=INTEGER},",
          "created_by = #{createdBy,jdbcType=INTEGER},",
          "subject_id = #{subjectId,jdbcType=INTEGER},",
          "chapter_id = #{chapterId,jdbcType=INTEGER},",
          "created_at = #{createdAt,jdbcType=TIMESTAMP},",
          "moderated_at = #{moderatedAt,jdbcType=TIMESTAMP},",
          "moderated_by = #{moderatedBy,jdbcType=INTEGER},",
          "status = #{status,jdbcType=VARCHAR},",
          "difficulty = #{difficulty,jdbcType=VARCHAR}",
        "where id = #{id,jdbcType=INTEGER}"
    })
    int updateByPrimaryKey(MCQQuestion record);
}